[supervisord]
nodaemon=true
logfile=/dev/stdout
logfile_maxbytes=0
loglevel=info

[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

[program:init_git]
; 用 -lc 让 bash 读环境初始化；脚本异常退出会被自动重启
command=/bin/bash -lc "/app/launch.sh env && /app/launch.sh init"
directory=/app
autostart=true
autorestart=true
startsecs=3
startretries=999
exitcodes=0
stopasgroup=true
killasgroup=true
environment=HOME="/app/.home",BASE="/app",HISTORY_DIR="/data/history"
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:sync_check]
; 等待 .git_sync_done，再启动其他服务
command=/bin/bash -lc 'while ! /app/launch.sh check_sync; do sleep 2; done && echo "同步完成，启动其他服务" && supervisorctl -s unix:///tmp/supervisor.sock start dotnet python uvicorn'
directory=/app
autostart=true
autorestart=false
startsecs=0
startretries=0
stopasgroup=true
killasgroup=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:dotnet]
command=/app/bin/docker-entrypoint.sh
directory=/app
autostart=false
autorestart=true
startsecs=3
stopasgroup=true
killasgroup=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:python]
command=/app/venv/bin/python /app/python/main.py
directory=/app
autostart=false
autorestart=true
startsecs=3
stopasgroup=true
killasgroup=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:uvicorn]
command=/app/venv/bin/python -m uvicorn app.main:app --host 0.0.0.0 --port 8000
directory=/app
autostart=false
autorestart=true
startsecs=3
stopasgroup=true
killasgroup=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
