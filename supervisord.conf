[supervisord]
nodaemon=true
logfile=/dev/stdout
logfile_maxbytes=0
loglevel=info

[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

; 1) 初始化仓库
[program:init_git]
command=/bin/bash -c "/app/launch.sh env && /app/launch.sh init"
directory=/app
autostart=true
autorestart=false
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; 2) 等待同步完成后启动各服务（包含 Nginx）
[program:sync_check]
command=/bin/bash -c "while ! /app/launch.sh check_sync; do sleep 2; done && echo '同步完成，启动其他服务' && supervisorctl start dotnet python uvicorn nginx"
directory=/app
autostart=true
autorestart=false
startsecs=0
startretries=0
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; 3) dotnet 服务：仅监听内网端口
[program:dotnet]
command=/app/bin/docker-entrypoint.sh
environment=ASPNETCORE_URLS=http://127.0.0.1:%(ENV_DOTNET_PORT)s
autostart=false
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; 4) Python 后台（非HTTP亦可）
[program:python]
command=python /app/python/main.py
directory=/app
autostart=false
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; 5) Uvicorn 仅监听内网 UVICORN_PORT
[program:uvicorn]
command=/bin/bash -lc "uvicorn app.main:app --host 127.0.0.1 --port ${UVICORN_PORT:-9000}"
directory=/app
autostart=false
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; 6) Nginx 反向代理：渲染到 /app/nginx.conf，再 -c 指定文件启动（避免 /etc 权限问题）
[program:nginx]
command=/bin/bash -lc "envsubst < /app/nginx.conf.template > /app/nginx.conf && nginx -c /app/nginx.conf -g 'daemon off;'"
directory=/app
user=root
autostart=false
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0